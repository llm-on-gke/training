apiVersion: jobset.x-k8s.io/v1alpha2
kind: JobSet
metadata:
  #namespace: default
  name: train
  labels:
      kueue.x-k8s.io/queue-name: dws-local-queue
  annotations:
      provreq.kueue.x-k8s.io/maxRunDurationHours: "2"
  #annotations:
  #  kueue.x-k8s.io/queue-name: ${K8S_LOCAL_QUEUE}
spec:
  network:
    enableDNSHostnames: true
  replicatedJobs:
  - name: workers
    template:
      spec:
        parallelism: 4
        completions: 4
        backoffLimit: 0
        suspend: true #dws
        template:
          metadata:
            annotations:
              #iam.gke.io/gcp-service-account: "${GCP_SERVICE_ACCOUNT}"
              gke-gcsfuse/volumes: "true"
              networking.gke.io/default-interface: "eth0"
              networking.gke.io/interfaces: |
                [
                  {"interfaceName":"eth0","network":"default"},
                  {"interfaceName":"eth1","network":"gvnic-1"},
                  {"interfaceName":"eth2","network":"rdma-0"},
                  {"interfaceName":"eth3","network":"rdma-1"},
                  {"interfaceName":"eth4","network":"rdma-2"},
                  {"interfaceName":"eth5","network":"rdma-3"},
                  {"interfaceName":"eth6","network":"rdma-4"},
                  {"interfaceName":"eth7","network":"rdma-5"},
                  {"interfaceName":"eth8","network":"rdma-6"},
                  {"interfaceName":"eth9","network":"rdma-7"}
                ]
          spec:
            #dnsPolicy: ClusterFirstWithHostNet
            nodeSelector:
              cloud.google.com/gke-nodepool:  a3-ultragpu-8g-a3-ultragpu-pool #dws
              #cloud.google.com/gke-accelerator: nvidia-h200-141gb
            tolerations:
            #- key: cloud.google.com/gke-queued
            #  effect: NoSchedule
            # value: "true"
            - key: nvidia.com/gpu
              operator: Exists
              effect: NoSchedule
            restartPolicy: Never
            serviceAccountName: storage-access
            volumes:
            - name: library-dir-host
              hostPath:
                path: /home/kubernetes/bin/nvidia
            - name: gib
              hostPath:
                path: /home/kubernetes/bin/gib
            - name: dshm
              emptyDir:
                medium: Memory
                sizeLimit: 256Gi
            - name: gcs-fuse-csi-ephemeral-data
              csi:
                driver: gcsfuse.csi.storage.gke.io
                volumeAttributes:
                  bucketName: rick-mlperf
                  mountOptions: "only-dir=dp-perf,implicit-dirs"
                  fileCacheCapacity: "-1Mi"
                  fileCacheForRangeRead: "true"
                  metadataCacheTTLSeconds: "-1"
                  metadataNegativeCacheTTLSeconds: "0"
                  metadataStatCacheCapacity: "-1Mi"
                  metadataTypeCacheCapacity: "-1Mi"
            - name: gcs-fuse-csi-ephemeral-model
              csi:
                driver: gcsfuse.csi.storage.gke.io
                volumeAttributes:
                  bucketName: rick-mlperf
                  mountOptions: "only-dir=llama-7b,implicit-dirs"
                  fileCacheCapacity: "-1Mi"
                  fileCacheForRangeRead: "true"
                  metadataCacheTTLSeconds: "-1"
                  metadataNegativeCacheTTLSeconds: "0"
                  metadataStatCacheCapacity: "-1Mi"
                  metadataTypeCacheCapacity: "-1Mi"
            - name: gcs-fuse-writing
              csi:
                driver: gcsfuse.csi.storage.gke.io
                volumeAttributes:
                  bucketName: rick-mlperf
                  mountOptions: "only-dir=dp-mlperf/output,implicit-dirs"
                  fileCacheCapacity: "-1Mi"
                  fileCacheForRangeRead: "true"
                  metadataCacheTTLSeconds: "-1"
                  metadataNegativeCacheTTLSeconds: "0"
                  metadataStatCacheCapacity: "-1Mi"
                  metadataTypeCacheCapacity: "-1Mi"
            - name: local-checkpoints-storage
              emptyDir: {}
            containers:
            - name: worker
              image: us-east1-docker.pkg.dev/gpu-launchpad-playground/gke-llm/dp-repro:latest
              imagePullPolicy: Always
              ports:
              - containerPort: 3389
              env:
              - name: HOSTNAME_PREFIX
                valueFrom:
                  fieldRef:
                    fieldPath: metadata.annotations['jobset.sigs.k8s.io/jobset-name']
              - name: HOSTNAME_SUFFIX
                valueFrom:
                  fieldRef:
                    fieldPath: metadata.annotations['jobset.sigs.k8s.io/replicatedjob-name']
              - name: MASTER_ADDR
                value: "train-workers-0-0.train"
              - name: MASTER_PORT
                value: "3389"
              - name: NODE_COUNT
                value: "4"
              - name: NODE_RANK
                valueFrom:
                  fieldRef:
                    fieldPath: metadata.annotations['batch.kubernetes.io/job-completion-index']
              - name: PYTHONUNBUFFERED
                value: "0"
              - name: NCCL_DEBUG
                value: DEBUG
              - name: LD_LIBRARY_PATH
                value: /usr/local/nvidia/lib64
              command: ["/bin/bash", "-c"]
              args:
              - |
                set -e
                
                chmod +x /app/training.sh
                NUM_GPU_PER_NODE=8
                echo "Starting training, saving checkpoints to /mnt/local-checkpoints"
                bash /app/training.sh "\${MASTER_ADDR}" "\${MASTER_PORT}" "\${NODE_RANK}" "\${NODE_COUNT}" "$NUM_GPU_PER_NODE" "8" "1024" "16"
                echo "Training finished. Copying checkpoints to persistent storage."
                # Only the rank 0 node should perform the copy to avoid race conditions.
                if [ "\${NODE_RANK}" -eq 0 ]; then
                  # rsync is often safer and more efficient than cp
                  gsutil rsync -r /mount/local-checkpoints/ gs://talkiq-data-temp-30d/"\${GCS_OUTPUT_DIR}"
                  echo "Copy complete."
                else
                  echo "Not rank 0, skipping copy."
                fi
              volumeMounts:
              - name: library-dir-host
                mountPath: /usr/local/nvidia
                readOnly: true
              - name: gib
                mountPath: /usr/local/gib
                readOnly: true
              - name: gcs-fuse-csi-ephemeral-data
                mountPath: /mount/data
                readOnly: true
              - name: gcs-fuse-csi-ephemeral-model
                mountPath: /mount/base-model
                readOnly: true
              - name: gcs-fuse-writing
                mountPath: /mount/models
              - name: dshm
                mountPath: /dev/shm
              - name: local-checkpoints-storage
                mountPath: /mount/local-checkpoints
              resources:
                requests:
                  #cpu: ${NUM_CPU_CORES}
                  #memory: ${NUM_MEMORY}
                  nvidia.com/gpu: 8
                limits:
                  #cpu: ${NUM_CPU_CORES}
                  #memory: ${NUM_MEMORY}
                  nvidia.com/gpu: 8